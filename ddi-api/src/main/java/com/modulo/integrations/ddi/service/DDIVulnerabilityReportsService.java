package com.modulo.integrations.ddi.service;

import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.xml.bind.DatatypeConverter;

import org.springframework.stereotype.Service;

import com.modulo.integrations.ddi.adapter.DDIVulnerabilityReportsServiceAdapter;
import com.modulo.integrations.ddi.converter.ReportConverter;
import com.modulo.integrations.ddi.to.VulnerabilityReport;
import com.modulo.integrations.ddi.utils.DDIReportListUtil;

@Service(value = "ddiVulnerabilityReportsService")
public class DDIVulnerabilityReportsService {

   @Resource
   private DDIVulnerabilityReportsServiceAdapter serviceAdapter;

   @Resource
   private DDIReportListUtil reportUtil;

   protected final void setServiceAdapter(final DDIVulnerabilityReportsServiceAdapter serviceAdapter) {
      this.serviceAdapter = serviceAdapter;

   }

   public List<VulnerabilityReport> list() throws IOException, NoSuchAlgorithmException {

      final List<VulnerabilityReport> reports = new ArrayList<VulnerabilityReport>();

      final Map<String, StringBuffer> reportFiles = this.serviceAdapter.list();

      for (final String key : reportFiles.keySet()) {

         final StringBuffer reader = reportFiles.get(key);

         final String buffer = reader.toString();

         final String hash = this.md5Hash(buffer.getBytes());

         if (this.reportUtil.isNotProcessed(hash)) {

            reports.add(new ReportConverter().convert(buffer));

            this.reportUtil.register(hash);
         }

      }

      return reports;
   }

   protected final String md5Hash(final byte[] bytes) throws NoSuchAlgorithmException, IOException {

      return DatatypeConverter.printHexBinary(MessageDigest.getInstance("MD5").digest(bytes));
   }

   protected final void setReportListUtilMock(final DDIReportListUtil reportUtil) {

      this.reportUtil = reportUtil;

   }

}
